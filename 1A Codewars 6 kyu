



######## Bouncing Balls
def bouncing_ball(h, bounce, window):
    # your code
    if h>0 and 0 < bounce < 1 and window<h:
        count = 1 
        bounce_h = h*bounce
        
        while bounce_h > window:
            count += 2
            bounce_h = bounce_h * bounce
        
        return count
        
        
        
    else:    
        return -1







///// Rectangle into Squares
def sq_in_rect(lng, wdth):
    # your code
    if lng == wdth:
        return None
    squares = []
    while lng > 0 and wdth > 0:
        if lng > wdth:
            squares.append(wdth)
            lng -= wdth
        else:
            squares.append(lng)
            wdth -= lng
    
    return squares




//// Multoples of 3 or 5
def solution(number):
    i = 0
    multiples = []
    while i < number:
        if i % 3 == 0 or i%5 == 0:
            multiples.append(i)
        i+=1
    
    
    return sum(multiples)







/// for CSE 6040 - Finding the odd int

def find_it(seq):
    
    sortedints = sorted(seq)
    current = None
    appearance = 0
    oddnum = None
    
    
    for num in sortedints:
        if current == num:
            appearance += 1
        else:
            if current is None and oddnum is None:
                current = num
                appearance += 1
            if current is not None and appearance % 2 != 0:
                oddnum = current
            else:
                appearance = 1
                current = num
    if current is not None and appearance % 2 != 0:
        oddnum = current
    
    return oddnum



        XOR Soln:
            def find_it(seq):
                result = 0
                for n in seq:
                    result ^= n
                
                return result
